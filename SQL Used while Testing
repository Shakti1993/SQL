create table abc1 
(id number(9) , name varchar2(9), 
email varchar2(20), amount number(9), 
paid number(9),city varchar2(9));

---Display the structure of the table--
describe abc1;

-----Insert the values inside the table--
insert into abc1 values(101,'John','John@gmail.com',10000,8000,'pune');
insert into abc1 (id,name,amount,paid,city) VALUES(102,'Max',15000,5000,'Delhi');
insert into abc1 values(103,'jerry','jerry@yahoo.com',20000,18011.99,'Mumbai');
insert into abc1 values (101,'abhi','abhii101@gmail.com',10000,4000,'pune');
insert into abc1 values (102,'amit','amit102@gmail.com',20000,6000,'mumbai');
insert into abc1 values (103,'yash','yash102@outlook.com',25000,4000,'samgli');
insert into abc1 values (104,'shakti','shakti104@gmail.com',35000,5000,'sangli');
insert into abc1 values (105,'vishwa','vishwa105@gmail.com',40000,7000,'pune');
insert into abc1 values (106,'sam','vishwa105@gmail.com',40000,7000,'pune');
insert into abc1 values (107,'Lucky','Lucky12@gmail.com',20000,5000,'Mumbai');
insert into abc1 (id,name,email,amount,city) values(108,'amar','amar@gmail.com',50000,'Delhi');
insert into abc1 values ('','Lucky','','',5000,'Mumbai');
insert into abc1 values (103,'yash','yash102@outlook.com',25000,4000,'samgli');
insert into abc1 values (104,'shakti','shakti104@gmail.com',35000,5000,'London','zoology');

----Display the table--
select * from abc1;
--Display only one specific row from the table..
select Name from abc1;
---Display aby 2 rows from the table;
select Name,city from abc1;

----------------------------------------------------------
----SQL Clauses---------------

---Where Clause-------
--1. find amount which = 10000;
select * from abc1 where amount = 10000;
--2. find only two columns the name = John
select city,amount from abc1 where name = 'John';
--3. find the amount higher than 15000;
select * from abc1 where amount > 15000;
--4. find the null amount from the table
select * from abc1 where amount is null;
---5. find any not null value from table.
select * from abc1 where email is not null;

---Group By Clause-------It divides the multilpe rows into identical groups.
--1.return total group of city with there counts--
select city,count(city)from abc1 group by city;
--2.find the Unique from the table
select name,count(amount) 
from abc1 group by name having count(amount)<2;--find unique value..
--3. find duplicate
select city,count(name)
from abc1 group by city having count(name)>=2;-- Duplicate values
---group by name--
select name from abc1 GROUP by name;
---group by amount
select amount from abc1 group by amount;
---group by using aggergate function--
select city,count(*) from abc1 group by city;
--group by using having clause--
select name,count(paid) 
from abc1 group by name having count(paid)=1;--Unique values

--Display city Count of employee
select city,count(city)from abc1 group by city;
---Display city wise highest amount
select city,max(amount) from abc1 group by city;
--Display city wise total amount
select city,sum(amount) from abc1 group by city;
------Display dept wise min amount---
select dept,min(amount)from abc1 group by dept;
---Display avg amount and sum of amount
select dept,avg(amount)as average_amount,sum(amount) as total_amount from abc1 group by dept;

---having Clause-------
--having clause is used only after group by clause with aggergate funaction..
--having and group by clause can be used to find duplicate and unique values.
--It applies filter on results which are generated by group by clause using specific aggregate functions.

--1. how to display duplicate records
select dept,count(amount) from abc1 group by dept having count(amount)>=2; 


--2.display full duplicate table
select id,name,email,amount,paid,city,dept,count(*)from abc1 
group by id,name,email,amount,paid,city,dept having count(*)=2;

--3.display full unique table
select id,name,email,amount,paid,city,dept,count(*)from abc1 
group by id,name,email,amount,paid,city,dept having count(*)=1;

select name,city,dept,max(amount)as high_dept_sal from abc1 group by name,city,dept having max(amount)>48000;

select name,city,dept,min(amount) as low_dep_sal from abc1 
group by name,city,dept having min(amount)<=10000;

-----Order By--
--Sorting the records in asc or desc order.

select * from abc1 order by amount asc nulls last;
select * from abc1 order by paid asc nulls last;

select name,dept,amount,count(*) from abc1 where id = 101 
group by name,dept,amount having count(*) >=1 order by amount asc nulls last;

--SQL OPERATORS---------------------------------------------------------------
--1- Arithmatic OPERATOR

select name,(amount+paid)as total_sal from abc1;
select abc1.*,(amount-paid) as sal_paid from abc1;
select name,dept,(amount/paid) from abc1;
select dept,(amount+paid)as tot from abc1 where dept = 'IT' order by tot asc;

--2.--Comparision Operator-------------------
select * from abc1 where amount !=10000;
select name,dept,city,amount from abc1 where amount > 15000; 
select * from abc1 where paid < 5000;
select * from abc1 where paid =8000;
select dept,amount from abc1 where amount >25000 order by amount desc nulls last;

--Between and Not between operators----
select * from abc1 where amount between 15000 and 25000;
select * from abc1 where amount not between 20000 and 45000 order by name desc;

--IN operators-------------
select * from abc1 where name in 'amar';
select * from abc1 where name not in 'Max';
select * from abc1 where dept in 'IT';
select * from abc1 where dept in 'it' or dept ='MECH';
select * from abc1 where dept in 'IT' or dept ='MECH' order by email desc nulls last;
select * from abc1 where name not in ('John','Max','shakti')order by name asc;

--Concatination Operators ||
select name || dept from abc1; 
select name ||' '||city as join from abc1;
select name ||' is from '||city as native_place from abc1;
select abc1.*,(name||' is from '|| city ||' in dept '||dept)as details from abc1;

---LOGICAL OPERATORS---------------------
--and/or logical operators.

select * from abc1 where name = 'yash' or city = 'sangli';
select * from abc1 where not(name ='shakti' or city = 'sangli');
select * from abc1 where dept = 'MECH' and name = 'Max';
select * from abc1 where amount = 10000 or amount = 50000 or amount = 40000; 
select * from abc1 where amount = 25000 or name = 'shakti';

--LIKE OPERATORS-----
--It is used for pattern/String search. It is case sensitive.

--display the rows whose ename starts with s
select * from abc1 where name like ('s%');

--display the rows whose ename ends with 'h'.
select * from abc1 where name like ('%h');

--display the rows whose ename's second char is 'a'-----
select * from abc1 where name like ('_a%');

-- display the rows whose ename's second last char is 'y'---
select * from abc1 where name like ('%s_');

--display the rows whose ename's third char is 'i'---
select * from abc1 where name like ('__i%');

--display the rows whose ename's third last char ends with 'r'---
select * from abc1 where name like '%r__%';

--7.display exactly 5 char string from ename column.
select * from abc1 where name like '_____';

---display the rows whose ename contains 'a
select * from abc1 where name like '%k%';

--display the rows whose ename contains 'a' or 'A'
select * from abc1 where name like '%k%' or name like '%A%';

--display the rows whose ename Starts with Y and ends with f
select * from abc1 where name like ('%y%h%');

--SQL FUNCTIONS-----------

---1. AGGREGATE FUNDTION----
--max,min,avg,sum,count
select max(amount)from abc1;
select name,city,dept,amount from abc1 where amount = (select max(amount) from abc1);
select min(paid) from abc1;
select count(name)from abc1;
select avg(amount) from abc1;
select sum(paid) from abc1;
select sum (paid) as need_to_pay,sum(amount) as already_paid from abc1;
select count(name),count(paid)from abc1;

--distinct function
--It will display unique records from perticular column.
select distinct(city) from abc1;

--How to dispay count of unique records?
select count(distinct(name))from abc1;--- this will only show unique count.
select count(name) from abc1;--- this will show all the name except the NULL 

--2.Character Function---
--Case Manipulation Character Manipulation
select lower(name) from abc1;
select upper(name) from abc1;
select upper(name),lower(city),INITCAP(email) from abc1 where name = 'yash';
select name,length(name) from abc1;

--Substr----Substring
--It displays the specific characters from main string

select substr(name,1,5)from abc1;
select substr ('minimum',1,4)from dual;
select substr ('Ashwathama',2,5)from dual;
select email,substr(email,-4)from abc1;

select substr('TV123456789LG101',1,2)||' is '||
substr('TV123456789LG101',-5,2)as Product_info from dual;

---Instr----returns the location of substring from string.
select instr (email,'@')from abc1;

select substr(email,1,instr(email,'@')-1) as User,
substr(email,instr(email,'@')+1) as Domain from abc1;


--SQL SUBQUERY-----------
--In SQL query there are twq queries one is Inner and Outer Query.

---find the highest amount from the table
select name,city,dept,amount from abc1 where amount = (select max(amount) from abc1); 

--find the min amount from the table
select name,dept,amount from abc1 where amount = (select min(amount) from abc1);
select * from abc1 where amount = (select min(amount) from abc1);
---find the second lowest amount from the table
select min(amount) from abc1 where amount > (select min(amount)from abc1);

-- find the second max amount from the table
select max(amount) from abc1 where amount <(select max (amount) from abc1);

--Second max salary with all details
select * from abc1 where amount = 
(select max(amount)from abc1 where amount < (select max(amount)from abc1));

--Second min salary with all details
select * from abc1 where amount = 
(select min(amount) from abc1 where amount >(select min(amount)from abc1));

--. Third max salary
select * from abc1 where amount = 
(select max (amount) from abc1 where amount < 
(select max(amount)from abc1 where amount != (select max(amount)from abc1)));

--.Fourth max salary
select * from abc1 where amount =
(select max(amount) from abc1 where amount < 
(select max(amount)from abc1 where amount < 
(select max(amount)from abc1 where amount !=
(select max(amount) from abc1))));

----------------------------------------------------------
----------------------------------------------------------
---Rank and Dense Rank---

--Basic Rank Command
select abc1.*, rank()over(order by name asc nulls last) from abc1;

---Highest Salary with emp details
select * from 
(select abc1.*,rank() over(order by amount desc nulls last) as Rank from abc1)where rank = 1;

---.2nd max sal with emp details
select * from 
(select abc1.*, rank() over(order by amount desc nulls last) as Rank from abc1) where rank = 2;

---3rd max sal with emp details
select * from 
(select abc1.*,rank() over(order by amount desc nulls last) as rank from abc1) where rank = 3;

--Top 5 highest sal
select * from 
(select abc1.*, rank()over(order by amount desc nulls last) as rank from abc1) where rank <=5;

--salaries between 3rd max to 6th max
select * from
(select abc1.*, rank() over(order by amount desc nulls last) as rank from abc1) 
where rank between 5 and 10;

select * from
(select abc1.*, rank() over(order by amount desc nulls last) as rank from abc1) 
where rank not between 1 and 5;

--particular salaries 3rd max,6th max,8th max
select * from 
(select abc1.*, rank() over(order by amount desc nulls last) as rank from abc1)
where rank in (2,6,10);

--particular salaries which are not 3rd max,6th max,8th max
select * from 
(select abc1.*, rank() over(order by amount desc nulls last) as rank from abc1)
where rank not in (3,6,4,7);

--.Lowest Salary by rank
select * from 
(select abc1.*, rank()over(order by amount asc nulls last) as rank from abc1) where rank = 1;

--2nd Lowest 
select *  from 
(select abc1.*, rank() over(order by amount asc nulls last) as rank from abc1) 
where rank = 3;

--Top 5 Lowest sal
select * from
(select abc1.*,rank() over(order by amount asc nulls last) as rank from abc1)
where rank <=5;


----------Dense rank--------
select * from 
(select abc1.*, dense_rank() over (order by amount desc nulls last) as Dense_rank from abc1)
where Dense_rank = 1

---Highest Salary with emp details
select * from 
(select abc1.*,dense_rank() over(order by amount desc nulls last) as Rank from abc1)where rank = 1;

--------------------------------------------------------------
-----Rownum--
--It will generate temporary sequnce number.

--Basic Command for RowNUm
select rownum from abc1;
select abc1.*, rownum from abc1;


--Q. Want to display first 5 records from table
select abc1.*, rownum from abc1 where rownum <=5;


----------------------------------------------------------------------------------
----Joins-----
--1. Inner Join
--join abc1 and abc2;
select * from abc1 
inner join abc2 
on abc1.id = abc2.id;

--2.Left outer join/ Left Join-------It displays matching records from 2 tables and remaining records 
--from left side table

select * from abc1 
left outer join abc2
on abc1.id = abc2.id

--3. Right outer join-----it displays matching records from 2 tables and remaining records from right 
--side table.
select * from abc2 right outer join abc1 
on abc2.id = abc1.id;

--4. Full outer join----it displays matching records from 2 tables and remaining records from both side table.
select * from abc1 full outer join abc2 on
abc1.id = abc2.id;

commit;

